asyncapi: 3.0.0
info:
  title: Newsware Websocket API
  version: "3.0.0"
  description: |
    Subscribe to real-time news.
servers:
  public:
    host: newswareapi.encypherstudio.com
    pathname: /ws/v3?apikey={apikey}
    protocol: wss
    variables:
      apikey:
        description: Apikey assigned to the user by Newsware
channels:
  communication:
    title: Communication channel
    servers:
      - $ref: "#/servers/public"
    messages:
      SubscribeRequest:
        $ref: "#/components/messages/SubscribeRequest"
      UnsubscribeRequest:
        $ref: "#/components/messages/UnsubscribeRequest"
operations:
  subscribe:
    title: Sbuscribe
    summary: Create a news subscription
    action: send
    channel:
      $ref: "#/channels/communication"
    description: |
      Replies "ok" when subscription is created, "data" when new data is available, and "error" when an error occurred
      with the subscription.
    messages:
      - $ref: "#/channels/communication/messages/SubscribeRequest"
    reply:
      channel:
        $ref: "#/channels/communication"
      messages:
        - $ref: "#/components/messages/ResponseSubscriptionData"
        - $ref: "#/components/messages/ResponseOk"
        - $ref: "#/components/messages/ResponseError"
  unsubscribe:
    title: Unsubscribe
    summary: Unsubscribe from one or all news subscriptions
    action: send
    channel:
      $ref: "#/channels/communication"
    description: |
      Replies "ok" when the subscription is removed and "error" to report any errors while unsubscribing.
    messages:
      - $ref: "#/channels/communication/messages/UnsubscribeRequest"
    reply:
      channel:
        $ref: "#/channels/communication"
      messages:
        - $ref: "#/components/messages/ResponseOk"
        - $ref: "#/components/messages/ResponseError"
components:
  messages:
    SubscribeRequest:
      payload:
        type: object
        properties:
          method:
            description: |
              Type of request
            example: subscribe
            type: string
            const: subscribe
          id:
            description: |
              Id to identify subscription, the server messages related to this subscription will have the same id
            example: 4d921aca-6117-46eb-88ed-1cd9284dbb80
            type: string
          value:
            $ref: "#/components/schemas/SubscribeRequestValue"
    UnsubscribeRequest:
      payload:
        type: object
        properties:
          method:
            description: |
              Type of request
            example: unsubscribe
            type: string
            const: unsubscribe
          id:
            description: |
              Id to identify the unsubscribe request
            example: d0df9941-dd7b-4b8c-8aa9-64367417a90c
            type: string
          value:
            type: object
            properties:
              subscriptionId:
                type: string
                description: Subscription id, it's the id used when creating the subscription
                example: 4d921aca-6117-46eb-88ed-1cd9284dbb80
              all:
                type: boolean
                description: If true, all subscriptions are removed
                example: false
    ResponseOk:
      payload:
        type: object
        description: Sent to acknowledge a request
        properties:
          method:
            type: string
            description: The method used in the request
          id:
            type: string
            description: The id used in the request
            example: 4d921aca-6117-46eb-88ed-1cd9284dbb80
          type:
            type: string
            const: ok
    ResponseError:
      payload:
        type: object
        description: Sent to report an error in the request
        properties:
          method:
            type: string
            description: The method used in the request
          id:
            type: string
            description: The id used in the request
            example: 4d921aca-6117-46eb-88ed-1cd9284dbb80
          type:
            type: string
            const: error
          value:
            type: object
            description: Contains the error
            properties:
              message:
                type: string
                description: The error message
    ResponseSubscriptionData:
      payload:
        type: object
        description: Sends news from a subscription
        properties:
          method:
            type: string
            const: subscribe
          type:
            type: string
            const: data
          id:
            type: string
            description: Id used when requesting the subscription
            example: 4d921aca-6117-46eb-88ed-1cd9284dbb80
          value:
            $ref: "#/components/schemas/News"
  schemas:
    SubscribeRequestValue:
      type: object
      properties:
        fields:
          description: News fields to retrieve. Id is always added to all news items.
          type: array
          items:
            $ref: "#/components/schemas/Field"
          examples:
            - ["body", "headline"]
        filter:
          $ref: "#/components/schemas/NewsFilter"
    News:
      type: object
      properties:
        id:
          description: |
            News id
          example: 2baf1f40105d9501fe319a8ec463fdf4325a2a5df445adf3f572f626253678c9
          type: string
        headline:
          description: Headline of the news
          example: |
            Press Release: Capgemini to acquire FCC division of Exiger, to expand its Financial Crime Compliance advisory, analytics and managed services capabilities
          type: string
        body:
          description: Body of the news
          example: |
            <?DOCTYPE html?><html><head><title>Press Release: Capgemini to acquire FCC division of Exiger, to expand its Financial Crime Compliance advisory, analytics and managed services capabilities</title></head><body><div><h1>Press Release: Capgemini to acquire FCC division of Exiger, to expand its Financial Crime Compliance advisory, analytics and managed services capabilities</h1><p class="newswire-article-time">September 8, 2023 06:30:00 UTC</p></div><div><div><p>Media relations:</p><p>Sam Connatty</p><p>Tel.: +44 (0)370 904 3601</p><p>https://www.globenewswire.com/Tracker?data=gC9eNIS97ojwrII3F5DBubYJmHo0vP3wqy-iWwztFoC3nohKKt4LXYYMd2AGicdR-2T8Vfm7AdAukinHOOXjIcIOV0m3OyMCr3hrdS8_VY9YvCf11Dce8th5an6-2C-g sam.connatty@capgemini.com</p><p>Investor relations:</p><p>Vincent Biraud</p><p>Tel.: +33 1 47 54 50 87</p> With its strong 55-year heritage and deep industry expertise, Capgemini is trusted by its clients to address the entire breadth of their business needs, from strategy and design to operations, fueled by the fast evolving and innovative world of cloud, data, AI, connectivity, software, digital engineering and platforms. The Group reported in 2022 global revenues of EUR22 billion.</p><p>Get The Future You Want | www.capgemini.com</p><p>Attachment</p><pre>-- 09_08_Capgemini to acquire FCC division of Exiger &#xA;      https://ml-eu.globenewswire.com/Resource/Download/718ae574-00df-4c2a-90e4-e8b4a0268867</pre><p>(END) Dow Jones Newswires</p><p>September 08, 2023 02:30 ET (06:30 GMT)</p></div></div><div><div><strong>s.DJ CAP.FR CGEMY</strong></div><div><strong>Article id:  | Exchange:  | Region:</strong></div><div><strong>Industry Codes:  | Category Codes:</strong></div></div></body></html>
          type: string
        tickers:
          type: array
          items:
            type: string
          description: A list of tickers related to the news
          example: [APPL, HSBC]
        source:
          description: Source of the news.
          $ref: "#/components/schemas/Source"
          example: SEC
        publicationTime:
          type: string
          description: Time of publication
          example: 2023-09-12T03:30:00Z
        receivedTime:
          type: string
          description: Time the news was received by Newsware
          example: 2023-09-12T03:30:02.192731316Z
        creationTime:
          type: string
          description: Time the news was indexed into the Newsware database
          example: 2023-09-12T03:30:02.351817973Z
        ciks:
          type: array
          items:
            type: integer
          description: (Only valid for SEC filings) CIKs associated to the SEC filing
          example: [1375793, 1692705]
        link:
          type: string
          description: (Only valid for SEC filings) Official SEC link to filing
          example: https://www.sec.gov/Archives/edgar/data/1692705/000110465923099095/0001104659-23-099095-index.htm
        categoryCodes:
          type: array
          items:
            type: string
          description: A set of category codes assigned by the news sources
          example:
            - ma
        industryCodes:
          type: array
          items:
            type: string
          description: A set of industry codes assigned by the news sources
          example:
            - finance
        regionCodes:
          type: array
          items:
            type: string
          description: A set of region codes assigned by the news sources
          example:
            - finland
    NewsFilter:
      description: |
        Used to filter news by different criteria.
      oneOf:
        - $ref: "#/components/schemas/TextQuery"
        - $ref: "#/components/schemas/ConditionQuery"
        - $ref: "#/components/schemas/MetadataQuery"
    ConditionQuery:
      title: Condition filter
      type: object
      description: |
        Used to join multiple value using an AND, AND NOT or OR condition.

        Example, search for news that contains "bitcoin" or "ethereum" in the headline AND don't contain "scam" in the body:
        ```json
        {
          "type": "and",
          "value": [
            {
              "type": "text",
              "action": "any",
              "value": ["bitcoin", "ethereum"],
              "onlyHeadline": true
            },
            {
              "type": "text",
              "action": "exclude",
              "value": ["scam"],
              "onlyBody": true
            }
          ]
        }
        ```


        Example, search for news that fulfill one of the following:
          - Mention "bitcoin" AND "bull run" in the headline
          - Mention "dollar", in the headline
        ```json
        {
          "type": "or",
          "value": [
            {
                "type": "text",
                "action": "all",
                "value": ["bitcoin", "bull run"], 
                "onlyHeadline": true
            },
            { 
              "type": "text",
              "action": "any",
              "value": ["dollar"],
              "onlyHeadline": true
            }
          ]
        }

        Example, search for news that fulfill all of the following:
          - Don't mention "bitcoin"
          - Don't have "BTC" as ticker.
        ```json
        {
          "type": "andNot",
          "value": [
            {
                "type": "text",
                "action": "any",
                "value": ["bitcoin"]
            },
            { 
              "type": "ticker",
              "action": "any",
              "value": ["BTC"]
            }
          ]
        }
        ```
      properties:
        type:
          type: string
          enum: ["and", "or", "andNot"]
        value:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/TextQuery"
              - $ref: "#/components/schemas/ConditionQuery"
              - $ref: "#/components/schemas/MetadataQuery"
    TextQuery:
      title: Text filter
      type: object
      description: |
        Used to retrieve or exclude news containing various texts. If action is "all" a match will occur if all the texts are mentioned in the news, if "any" a match will occur if any of the items are mentioned, if "exclude" a match will
        occur if none of the texts are mentioned.
      properties:
        type:
          type: string
          const: text
        action:
          $ref: "#/components/schemas/ActionType"
          example: any
        value:
          type: array
          items:
            type: string
          description: Texts to search for
          example:
            - bitcoin
            - ethereum
        onlyBody:
          type: boolean
          description: If true, the value will be searched only in the body of the news, and not the headline.
          example: false
        onlyHeadline:
          type: boolean
          description: If true, the value will be searched only in the headline.
          example: false
    MetadataQuery:
      title: Metadata filter
      type: object
      description: |
        Used to search by metadata. If action is "all" a match will occur if all the value items
        are present, if "any" a match will occur if any of the items are present, if "exclude" a match will
        occur if none of the value items are present.
      properties:
        type:
          type: string
          enum:
            - tickers
            - codes
            - source
            - ciks
          example: tickers
        action:
          $ref: "#/components/schemas/ActionType"
          example: any
        value:
          type: array
          items:
            type: string
          description: Values to search for
          example:
            - APPL
            - BTC
    Source:
      type: string
      enum:
        - DJ
        - AR
        - PZ
        - PN
        - BW
        - SEC
        - HS
    ActionType:
      type: string
      enum:
        - any
        - all
        - exclude
    Field:
      type: string
      enum:
        - headline
        - body
        - tickers
        - source
        - publicationTime
        - receivedTime
        - creationTime
        - categoryCodes
        - ciks
        - link
