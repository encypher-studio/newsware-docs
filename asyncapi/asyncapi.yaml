asyncapi: 2.6.0
info:
  title: Newsware Websocket API
  version: "2.0.0"
  description: |
    Subscribe to real-time news.
servers:
  public:
    url: newswareapi.encypherstudio.com/ws/v2?apikey={apikey}
    protocol: wss
    variables:
      apikey:
        description: Apikey assigned by the Newsware team
channels:
  subscribe:
    publish:
      description: |
        Subscription responses, type "ok" is sent once the subscription is created, type "data" is used to deliver news that pass the filter, and "error" to report any errors in the subscription:
        
        ```json
        {
          "method": "subscribe",
          "type": "data" | "error" | "ok",
          "payload":  News[] | null | null
        }
        ```
      message:
        oneOf:
          - $ref: '#/components/messages/ResponseSubscriptionData'
          - $ref: '#/components/messages/ResponseOk'
          - $ref: '#/components/messages/ResponseError'
    subscribe:
      description: |
        Subscribe to a news feed using a filter.
      message:
        $ref: '#/components/messages/SubscribeRequest'
  unsubscribe:
    publish:
      description: |
        Subscription responses, type "ok" is sent once the subscription is removed and "error" to report any errors while unsubscribing:
        
        ```json
        {
          "method": "unsubscribe",
          "type": "error" | "ok",
          "payload": null | null
        }
        ```
      message:
        oneOf:
          - $ref: '#/components/messages/ResponseOk'
          - $ref: '#/components/messages/ResponseError'
    subscribe:
      description: |
        Remove a subscription.
      message:
        $ref: '#/components/messages/UnsubscribeRequest'
components:
  messages:
    SubscribeRequest:
      payload:
        type: object
        properties:
          method:
            description: |
              Type of request
            example: subscribe
            type: string
            const: subscribe
          id:
            description: |
              Id to identify subscription, the server messages related to this subscription will have the same id
            example: 4d921aca-6117-46eb-88ed-1cd9284dbb80
            type: string
          payload:
            $ref: '#/components/schemas/NewsFilter'
    UnsubscribeRequest:
      payload:
        type: object
        properties:
          method:
            description: |
              Type of request
            example: unsubscribe
            type: string
            const: unsubscribe
          id:
            description: |
              Id to identify the unsubscribe request
            example: d0df9941-dd7b-4b8c-8aa9-64367417a90c
            type: string
          payload:
            type: object
            properties:
              subscriptionId:
                type: string
                description: Subscription id, it's the id used when creating the subscription
                example: 4d921aca-6117-46eb-88ed-1cd9284dbb80
              all:
                type: boolean
                description: If true, all subscriptions are removed
                example: false
    ResponseOk:
      payload:
        type: object
        description: Sent to acknowledge a request
        properties:
          method:
            type: string
            description: The method used in the request
          id:
            type: string
            description: The id used in the request
          type:
            type: string
            const: ok
    ResponseError:
      payload:
        type: object
        description: Sent to report an error in the request
        properties:
          method:
            type: string
            description: The method used in the request
          id:
            type: string
            description: The id used in the request
          type:
            type: string
            const: error
          payload:
            type: object
            description: Contains the error
            properties:
              message:
                type: string
                description: The error message
    ResponseSubscriptionData:
      payload:
        type: object
        description: Sends news from a subscription
        properties:
          method:
            type: string
            const: subscribe
          id:
            type: string
            description: Id used when requesting the subscription
          payload:
            type: array
            items:
              $ref: '#/components/schemas/News'
  schemas:
    News:
      type: object
      properties:
        id:
          description: |
            Sequential id generated by Newsware
          example: 24
          type: integer
        headline:
          description: Headline of the news
          example: |
            Press Release: Capgemini to acquire FCC division of Exiger, to expand its Financial Crime Compliance advisory, analytics and managed services capabilities
          type: string
        body:
          description: Body of the news
          example: |
            <?DOCTYPE html?><html><head><title>Press Release: Capgemini to acquire FCC division of Exiger, to expand its Financial Crime Compliance advisory, analytics and managed services capabilities</title></head><body><div><h1>Press Release: Capgemini to acquire FCC division of Exiger, to expand its Financial Crime Compliance advisory, analytics and managed services capabilities</h1><p class="newswire-article-time">September 8, 2023 06:30:00 UTC</p></div><div><div><p>Media relations:</p><p>Sam Connatty</p><p>Tel.: +44 (0)370 904 3601</p><p>https://www.globenewswire.com/Tracker?data=gC9eNIS97ojwrII3F5DBubYJmHo0vP3wqy-iWwztFoC3nohKKt4LXYYMd2AGicdR-2T8Vfm7AdAukinHOOXjIcIOV0m3OyMCr3hrdS8_VY9YvCf11Dce8th5an6-2C-g sam.connatty@capgemini.com</p><p>Investor relations:</p><p>Vincent Biraud</p><p>Tel.: +33 1 47 54 50 87</p> With its strong 55-year heritage and deep industry expertise, Capgemini is trusted by its clients to address the entire breadth of their business needs, from strategy and design to operations, fueled by the fast evolving and innovative world of cloud, data, AI, connectivity, software, digital engineering and platforms. The Group reported in 2022 global revenues of EUR22 billion.</p><p>Get The Future You Want | www.capgemini.com</p><p>Attachment</p><pre>-- 09_08_Capgemini to acquire FCC division of Exiger &#xA;      https://ml-eu.globenewswire.com/Resource/Download/718ae574-00df-4c2a-90e4-e8b4a0268867</pre><p>(END) Dow Jones Newswires</p><p>September 08, 2023 02:30 ET (06:30 GMT)</p></div></div><div><div><strong>s.DJ CAP.FR CGEMY</strong></div><div><strong>Article id:  | Exchange:  | Region:</strong></div><div><strong>Industry Codes:  | Category Codes:</strong></div></div></body></html>
          type: string
        tickers:
          type: array
          items:
            type: string
          description: A list of tickers related to the news
          example: [ APPL, HSBC ]
        source:
          description: Source of the news.
          $ref: '#/components/schemas/Source'
          example: SEC
        publicationTime:
          type: string
          description: Time of publication
          example: 2023-09-12T03:30:00Z
        receivedTime:
          type: string
          description: Time the news was received by Newsware
          example: 2023-09-12T03:30:02.192731316Z
        creationTime:
          type: string
          description: Time the news was indexed into the Newsware database
          example: 2023-09-12T03:30:02.351817973Z
        ciks:
          type: array
          items:
            type: integer
          description: (Only valid for SEC filings) CIKs associated to the SEC filing
          example: [ 1375793, 1692705 ]
        link:
          type: string
          description: (Only valid for SEC filings) Official SEC link to filing
          example: https://www.sec.gov/Archives/edgar/data/1692705/000110465923099095/0001104659-23-099095-index.htm
    NewsFilter:
      description: |
        Used to filter news by publication time, tickers, ciks, sources, and a query.
        Filter example:
        ```json
        {
          "query": {
            "type": "and",
            "queries": [
              {
                "type": "text",
                "term": "bitcoin",
                "onlyHeadline": "true"
              },
              {
                "type": "text",
                "term": "bull run",
                "onlyBody": "true",
                "ignore": "true"
              }
            ]
          },
          "tickers": ["APPL", "BMW", "BTC"],
          "ciks": [1805719, 1557593],
          "sources": ["DJ", "AR", "PZ", "PN", "BW", "SEC"]
        }
        ```
      properties:
        tickers:
          description: A list of tickers. If the ticker exists in the news, it will be fetched.
          type: array
          items:
            type: string
          example: [ APPL, BMW, BTC ]
        ciks:
          description: A list of CIKs. If the ticker exists in the SEC filing, it will be fetched.
          type: array
          items:
            type: integer
          example: [ 1805719, 1557593 ]
        query:
          oneOf:
            - $ref: '#/components/schemas/TextQuery'
            - $ref: '#/components/schemas/ConditionQuery'
        sources:
          description: A list of sources. Only news from these sources will be fetched. If empty, all sources are fetched.
          type: array
          items:
            $ref: '#/components/schemas/Source'
    ConditionQuery:
      type: object
      description: |
        Used to join multiple queries using an AND or OR condition.

        Example, search for news that contains "bitcoin" in the headline AND don't contain "scam" in the body:
        ```json
        {
          type: "and",
          queries: [
            {
              "type": "text",
              "term": "bitcoin",
              "onlyHeadline": true
            },
            {
              "type": "text",
              "term": "scam",
              "onlyBody": true,
              "ignore": true
            }
          ]
        }
        ```
        
        
        Example, search for news that fulfill one of the following:
          - Mention "bitcoin" AND "bull run" in the headline
          - Mention "dollar", in the headline
        ```json
        {
          "type": "or",
          "queries": [
            {
              "type": "and",
              "queries": [
                {
                  "type": "text",
                  "term": "bitcoin", 
                  "onlyHeadline": true
                },
                {
                  "type": "text",
                  "term": "bull run",
                  "onlyHeadline": true}
              ]
            },
            { 
              "type": "text",
              "term": "dollar",
              "onlyHeadline": true}
          ]
        }
        ```
      properties:
        type:
          type: string
          enum: ["and", "or"]
        queries:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/TextQuery'
              - $ref: '#/components/schemas/ConditionQuery'
    TextQuery:
      type: object
      description: |
        Used to retrieve or exclude news containing a text.
      properties:
        type:
          type: string
          const: text
        term:
          type: string
          description: Term to search for
          example: bitcoin
        onlyBody:
          type: boolean
          description: If true, the term will be searched only in the body of the news, and not the headline.
          example: true
        onlyHeadline:
          type: boolean
          description: If true, the term will be searched only in the headline.
          example: true
        ignore:
          type: boolean
          description: Whether to ignore news that contain the term. Works as a NOT query.
          example: false
    Source:
      type: string
      enum:
        - DJ
        - AR
        - PZ
        - PN
        - BW
        - SEC
        - HS
