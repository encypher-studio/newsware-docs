"use strict";(self.webpackChunknewsware_clients_documentation=self.webpackChunknewsware_clients_documentation||[]).push([[187],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,d=u["".concat(s,".").concat(m)]||u[m]||f[m]||o;return n?r.createElement(d,a(a({ref:t},p),{},{components:n})):r.createElement(d,a({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5756:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>f,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:3},a="Multiple queries",l={unversionedId:"websocket-api/filter/multiple-queries",id:"websocket-api/filter/multiple-queries",title:"Multiple queries",description:'Multiple queries can be joined with "and" and "or" conditions.',source:"@site/docs/websocket-api/filter/multiple-queries.md",sourceDirName:"websocket-api/filter",slug:"/websocket-api/filter/multiple-queries",permalink:"/websocket-api/filter/multiple-queries",draft:!1,editUrl:"https://github.com/encypher-studio/newsware_clients_documentation/tree/main/docs/websocket-api/filter/multiple-queries.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Text query",permalink:"/websocket-api/filter/text"},next:{title:"Nesting queries",permalink:"/websocket-api/filter/nesting-queries"}},s={},c=[{value:"Usage",id:"usage",level:2}],p={toc:c},u="wrapper";function f(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"multiple-queries"},"Multiple queries"),(0,i.kt)("p",null,'Multiple queries can be joined with "and" and "or" conditions.'),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,'Search all news containing "bitcoin" or "crypto" or "ethereum":'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'import {text, News, Api, or} from "newsware";\n\nconst api = new Api(apiKey)\napi.subscribe(\n    {\n        query: or(\n            text("bitcoin"),\n            text("crypto"),\n            text("ethereum")\n        )\n    },\n    (news: News) => {\n        // Do anything with the filtered news\n    }\n)\n')),(0,i.kt)("p",null,'Search all news containing "bitcoin" and "bull run":'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-typescript"},'import {text, News, Api, and} from "newsware";\n\nconst api = new Api(apiKey)\napi.subscribe(\n    {\n        query: and(\n            text("bitcoin"),\n            text("bull run")\n        )\n    },\n    (news: News) => {\n        // Do anything with the filtered news\n    }\n)\n')))}f.isMDXComponent=!0}}]);