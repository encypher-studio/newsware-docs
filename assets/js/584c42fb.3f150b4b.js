"use strict";(self.webpackChunknewsware_clients_documentation=self.webpackChunknewsware_clients_documentation||[]).push([[351],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,m=u["".concat(s,".").concat(d)]||u[d]||b[d]||l;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2964:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>b,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:2},o="Subscribe",i={unversionedId:"websocket-api/subscribe",id:"websocket-api/subscribe",title:"Subscribe",description:"The subscribe function is used to subscribe to news updates using the Websocket API.",source:"@site/docs/websocket-api/subscribe.md",sourceDirName:"websocket-api",slug:"/websocket-api/subscribe",permalink:"/websocket-api/subscribe",draft:!1,editUrl:"https://github.com/encypher-studio/newsware_clients_documentation/tree/main/docs/websocket-api/subscribe.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Quick start",permalink:"/websocket-api/quick-start"},next:{title:"Filter",permalink:"/websocket-api/filter/"}},s={},c=[],p={toc:c},u="wrapper";function b(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"subscribe"},"Subscribe"),(0,a.kt)("p",null,"The subscribe function is used to subscribe to news updates using the Websocket API."),(0,a.kt)("h1",{id:"definition"},"Definition"),(0,a.kt)("p",null,"It accepts the following arguments:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"function subscribe(\n    filter: Filter,\n    callback: (news: News) => void,\n    errorCallback?: (errorEvent: ErrorEvent) => void,\n    openCallback?: () => void,\n    closeCallback?: (closeEvent: CloseEvent) => void\n) {\n...\n}\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Name"),(0,a.kt)("th",{parentName:"tr",align:null},"Definition"),(0,a.kt)("th",{parentName:"tr",align:null},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"filter"),(0,a.kt)("td",{parentName:"tr",align:null},"An object used to filter news, refer to ",(0,a.kt)("a",{parentName:"td",href:"./filter"},"Filter")),(0,a.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"callback"),(0,a.kt)("td",{parentName:"tr",align:null},"The filtered news will be passed to this callback"),(0,a.kt)("td",{parentName:"tr",align:null},"\u2705")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"errorCallback"),(0,a.kt)("td",{parentName:"tr",align:null},"A callback to receive websocket errors"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"openCallback"),(0,a.kt)("td",{parentName:"tr",align:null},"A callback to be called when the websocket connection is established"),(0,a.kt)("td",{parentName:"tr",align:null})),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"closeCallback"),(0,a.kt)("td",{parentName:"tr",align:null},"A callback to be called if the websocket connection is closed"),(0,a.kt)("td",{parentName:"tr",align:null})))),(0,a.kt)("h1",{id:"usage"},"Usage"),(0,a.kt)("p",null,"This subscription returns all unfiltered news and implements all callbacks:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},'import {Api, News} from "newsware"\nimport {ErrorEvent, CloseEvent} from "ws";\n\nconst api = new Api(apiKey)\napi.subscribe(\n    {\n        // Add filters here\n    },\n    // On news received\n    (news: News) => {\n        console.log(news)\n    },\n    // On error\n    (error: ErrorEvent) => {\n        console.log("Websocket error: " + error.message)\n    },\n    // On connection opened\n    () => {\n        console.log("Connection established, waiting for news...")\n    },\n    // On connection closed\n    (_: CloseEvent) => {\n        console.log("Connection closed")\n    }\n)\n')))}b.isMDXComponent=!0}}]);